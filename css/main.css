:root {
  --halt: -1;

  --off: 0;
  --on: 1;

  --left: 0;
  --right: 1;

  --zero: -;
  --one: ;

  animation-name: operation-cycle;
  animation-duration: 8s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  animation-play-state: paused;
  --container-1: normal;
  --container-2: size;
  --opcode: 0px;
}

@keyframes operation-cycle {
  0% {
    --container-1: normal;
    --container-2: size;
    --opcode: 0px;
  }
  12.5% {
    --container-1: normal;
    --container-2: size;
    --opcode: 1px;
  }
  25% {
    --container-1: normal;
    --container-2: size;
    --opcode: 2px;
  }
  37.5% {
    --container-1: size;
    --container-2: normal;
    --opcode: 3px;
  }
  50% {
    --container-1: size;
    --container-2: normal;
    --opcode: 4px;
  }
  62.5% {
    --container-1: size;
    --container-2: normal;
    --opcode: 5px;
  }
  75% {
    --container-1: size;
    --container-2: normal;
    --opcode: 6px;
  }
  87.5% {
    --container-1: normal;
    --container-2: size;
    --opcode: 7px;
  }
}

:root:has(#run:checked) {
  animation-play-state: running;
}

#grand-parent {
  width: fit-content;
}

#parent-1 {
  height: var(--opcode);
  container-type: var(--container-1);
}

#parent-2 {
  height: var(--opcode);
  container-type: var(--container-2);
}

:root {
  --more-animations: var(--animation-val) var(--animation-pos) var(--animation-states);
  --more-play-states: var(--animation-val-play-states) var(--animation-pos-play-states) var(--animation-state-play-state);
}

#child-1 {
  animation-name: var(--more-animations);
  animation-delay: var(--animation-val-delays) var(--animation-cell-delay) var(--animation-state-delay);
  animation-duration: 3s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  animation-play-state: var(--more-play-states);

  --action-msg: calc(mod(clamp(0, var(--opcode) + 1, 2), 2) * var(--action));
  --pos-msg: calc(mod(clamp(0, var(--opcode) + 0, 2), 2) * var(--pos));
  --state-msg: calc(mod(clamp(0, var(--opcode) - 1, 2), 2) * var(--next-state));
  width: calc((var(--action-msg) + var(--pos-msg) + var(--state-msg)) * 1px);
}

#child-2 {
  animation-name: var(--more-animations);
  animation-duration: 3s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  animation-play-state: var(--more-play-states);

  --reset-msg: calc(mod(clamp(0, var(--opcode) - 2, 2), 2) * var(--pos));
  --pos-msg: calc(mod(clamp(0, var(--opcode) - 3, 2), 2) * var(--write) * var(--pos));
  --state-msg: calc(mod(clamp(0, var(--opcode) - 4, 2), 2) * (var(--dir) + var(--pos)));
  --state-msg: calc(mod(clamp(0, var(--opcode) - 5, 2), 2) * var(--state-cur));
  width: calc((var(--reset-msg) + var(--write-msg) + var(--pos-msg) + var(--state-msg)) * 1px);
}

/*receives reset of child 1*/
@container (height: 3px) {
  .child {
    --more-animations: var(--animation-val);
  }
}

/*receives reset of child 2*/
@container (height: 7px) {
  .child {
    --more-animations: ;
  }
}