:root {
  --halt: 0;

  --off: 0;
  --on: 1;

  --left: 0;
  --right: 1;

  /* initial pos */
  --pos: 1;
  --cell-cur: 0;
  --state-cur: 1;
  --state-next: var(--not-cell-cur) * var(--off-state-next-1) + var(--cell-cur) * var(--on-state-next-1);
  --info-next: var(--not-cell-cur) * var(--off-info-next-1) + var(--cell-cur) * var(--on-info-next-1);

  animation-name: operation-cycle;
  animation-duration: 8s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  animation-play-state: paused;
  --container-1: normal;
  --container-2: size;
  --opcode: 0px;
}

@keyframes operation-cycle {
  0% {
    --container-1: normal;
    --container-2: size;
    --opcode: 0px;
  }
  12.5% {
    --container-1: normal;
    --container-2: size;
    --opcode: 1px;
  }
  25% {
    --container-1: normal;
    --container-2: size;
    --opcode: 2px;
  }
  37.5% {
    --container-1: size;
    --container-2: normal;
    --opcode: 3px;
  }
  50% {
    --container-1: size;
    --container-2: normal;
    --opcode: 4px;
  }
  62.5% {
    --container-1: size;
    --container-2: normal;
    --opcode: 5px;
  }
  75% {
    --container-1: size;
    --container-2: normal;
    --opcode: 6px;
  }
  87.5% {
    --container-1: normal;
    --container-2: size;
    --opcode: 7px;
  }
}

:root:has(#run:checked) {
  animation-play-state: running;
}

#grand-parent {
  width: fit-content;
}

#parent-1 {
  height: var(--opcode);
  container-type: var(--container-1);
}

#parent-2 {
  height: var(--opcode);
  container-type: var(--container-2);
}

#child-1 {
  animation-name: var(--animation-val) var(--animation-pos) var(--animation-states) end;
  animation-duration: 3s;
  animation-timing-function: linear;
  animation-play-state: var(--animation-val-play-states) var(--animation-pos-play-states) var(--animation-state-play-state) paused;

  --actions-msg: calc(mod(clamp(0, var(--opcode) + 1, 2), 2) * var(--info-next));
  --pos-msg: calc(mod(clamp(0, var(--opcode) + 0, 2), 2) * var(--pos));
  --state-msg: calc(mod(clamp(0, var(--opcode) - 1, 2), 2) * var(--next-state));
  width: calc((var(--action-msg) + var(--pos-msg) + var(--state-msg)) * 1px);
}

/*receives reset of child 1*/
@container (height: 3px) {
  #child-1 {
    animation-name: var(--animation-val);
  }
}

#child-2 {
  --animation-actions: animation-action-0, animation-action-1, animation-action-2, animation-action-3, halt;
  --animation-actions-play-states: paused, paused, paused, paused, paused,;
  animation-name: var(--animation-actions) var(--animation-pos) var(--animation-states) end;
  animation-duration: 3s;
  animation-timing-function: linear;
  animation-play-state: var(--animation-actions-play-states) var(--animation-pos-play-states) var(--animation-state-play-state) paused;

  --go: 1;
  --dir: 1;
  --reset-msg: calc(mod(clamp(0, var(--opcode) - 2, 2), 2) * var(--go) * var(--pos));
  --pos-msg: calc(mod(clamp(0, var(--opcode) - 3, 2), 2) * var(--write) * var(--pos));
  --state-msg: calc(mod(clamp(0, var(--opcode) - 4, 2), 2) * (var(--dir) + var(--pos)));
  --state-msg: calc(mod(clamp(0, var(--opcode) - 5, 2), 2) * var(--state-cur));
  width: calc((var(--reset-msg) + var(--write-msg) + var(--pos-msg) + var(--state-msg)) * 1px);
}

@property --dir {
  syntax: "*";
  inherits: true;
}

/* save actions */
@container (width: 0px) and (height: 0px) {
  #child-2 {
    --animation-actions-play-states: running, paused, paused, paused, paused,;
  }
}

@keyframes animation-action-0 {
  10% {
    --dir: -1;
    --write: 0;
  }
}

@container (width: 1px) and (height: 0px) {
  #child-2 {
    --animation-actions-play-states: paused, running, paused, paused, paused,;
  }
}

@keyframes animation-action-1 {
  10% {
    --dir: -1;
    --write: 1;
  }
}

@container (width: 2px) and (height: 0px) {
  #child-2 {
    --animation-actions-play-states: paused, paused, running, paused, paused,;
  }
}

@keyframes animation-action-2 {
  10% {
    --dir: 1;
    --write: 0;
  }
}

@container (width: 3px) and (height: 0px) {
  #child-2 {
    --animation-actions-play-states: paused, paused, paused, running, paused,;
  }
}

@keyframes animation-action-3 {
  10% {
    --dir: 1;
    --write: 1;
  }
}

@container (width: 4px) and (height: 0px) {
  #child-2 {
    --animation-actions-play-states: paused, paused, paused, paused, running,;
  }
}

@keyframes halt {
  10% {
    --dir: 0;
    --write: 0;
    --go: 0;
  }
}

/*receives reset of child 2*/
@container (height: 7px) {
  #child-2 {
    animation-name: initial;
  }
}